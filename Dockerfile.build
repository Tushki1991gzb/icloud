# Multi-arch build (local):
#     docker buildx create --use --driver=docker-container --name container --bootstrap
#     docker buildx build . --cache-to type=local,dest=.cache,mode=max --cache-from type=local,src=.cache --platform=linux/amd64 --builder=container --progress plain -o dist -f Dockerfile.build
# ,linux/arm64,linux/arm/v7,linux/386

# map source image to base
FROM python:3.12 AS base

FROM base AS base_amd64_none
# does not need rustc

FROM base AS base_386_none
RUN \
  (curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-host i686-unknown-linux-gnu) && \
  . "$HOME/.cargo/env"

FROM base AS base_arm64_none
# does not need rustc

FROM base AS base_arm_v7
RUN \
  (curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-host armv7-unknown-linux-gnueabihf) && \
  . "$HOME/.cargo/env"

# fails  
FROM base AS base_arm_v6
RUN \
  (curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-host arm-unknown-linux-gnueabi) && \
  . "$HOME/.cargo/env"
      
FROM base_${TARGETARCH}_${TARGETVARIANT:-none} AS builder
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /app
COPY scripts scripts/
RUN \
  --mount=type=cache,target=/var/cache/apt,sharing=locked,id=apt-${TARGETARCH}-${TARGETVARIANT:-none} \
  --mount=type=cache,target=/var/lib/apt,sharing=locked,id=apk-lib-${TARGETARCH}-${TARGETVARIANT:-none} \
  scripts/build_apt_install
RUN \
  python3 -m venv .venv && \
  . .venv/bin/activate
COPY binary_dist binary_dist/
COPY pyproject.toml .
COPY LICENSE.md .
COPY README_PYPI.md .
COPY src src/
RUN \
    --mount=type=cache,target=/root/.cache/pip,sharing=locked,id=pip-${TARGETARCH}-${TARGETVARIANT:-none} \
    pip3 install --disable-pip-version-check -e .[dev,devlinux] && \
    BOOTLOADER_CC=musl-gcc pip3 install --disable-pip-version-check staticx==0.14.1 && \
    scripts/build_bin2 icloudpd icloud  && \
    scripts/build_bin1 icloud && \
    scripts/build_bin1 icloudpd_ex  && \
    scripts/build_static icloudpd && \
    scripts/build_static icloud && \
    scripts/build_static icloudpd_ex && \
    scripts/build_whl

FROM scratch
WORKDIR /
COPY --from=builder /app/dist/icloud* .
