# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Quality Checks

on:
  push:
    branches:
      - '**'
  pull_request:
    # branches: [ master ]
  workflow_dispatch:

jobs:
  skip_check:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-22.04
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/*.md", "examples/**", "docs/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'

  lint:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Test dependencies
      run: |
        pip3 install --disable-pip-version-check -e .[test]

    - name: Lint
      run: |
        scripts/lint

  type_check: 
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-20.04
    strategy: 
      matrix: 
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps: 
    - uses: actions/checkout@v4 
    - name: Set up Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v5 
      with: 
        python-version: ${{ matrix.python-version }} 
        cache: 'pip' 
    - name: Install Test dependencies 
      run: | 
        pip3 install --disable-pip-version-check -e .[test] 
    - name: Type Check 
      run: | 
        scripts/type_check 

  patch_version:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    uses: ./.github/workflows/patch-version.yml

  test: 
    needs: [skip_check, patch_version]
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-20.04
    strategy: 
      matrix: 
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps: 
    - name: Install Locales for Tests
      run: | 
        sudo apt-get update && sudo apt-get -y install locales locales-all

    - uses: actions/checkout@v4 

    - name: Download version info
      uses: actions/download-artifact@v4
      with:
        name: icloudpd-${{github.sha}}-version-info
        path: |
          src/foundation

    - name: Set up Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v5 
      with: 
        python-version: ${{ matrix.python-version }} 
        cache: 'pip' 
    
    - name: Install Test dependencies 
      run: | 
        pip3 install --disable-pip-version-check -e .[test] 
 
    - name: Test
      run: |
        scripts/test

  test_non_linux: 
    needs: [skip_check, patch_version]
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ${{ matrix.os }} 
    defaults:
      run:
        shell: bash
    strategy: 
      fail-fast: false
      matrix: 
        python-version: [3.12]
        os: 
          - "macos-12"
          - "macos-13"
          - "macos-14"
          - "windows-2019"
          - "windows-2022"
    steps: 

    - uses: actions/checkout@v4 

    - name: Download version info
      uses: actions/download-artifact@v4
      with:
        name: icloudpd-${{github.sha}}-version-info
        path: |
          src/foundation

    - name: Set up Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v5 
      with: 
        python-version: ${{ matrix.python-version }} 
        cache: 'pip' 
    
    - name: Install Test dependencies 
      run: | 
        pip3 install --disable-pip-version-check -e .[test] 
 
    - name: Test
      run: |
        scripts/test

  get_version:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Retrieve version
      id: get_version
      run: |
        echo icloudpd_version=$(scripts/get_version) >> $GITHUB_OUTPUT

    - name: Log version
      run: |
        echo "icloudpd_version=${{steps.get_version.outputs.icloudpd_version}}"

    outputs:
      icloudpd_version: ${{steps.get_version.outputs.icloudpd_version}}

  extract_changelog:
    needs: [get_version, skip_check]
    if: needs.skip_check.outputs.should_skip != 'true'
    uses: ./.github/workflows/extract-changelog.yml
    with:
      icloudpd_version: ${{needs.get_version.outputs.icloudpd_version}}

  build_docker:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    # 24.02 gives futex error during apt: https://github.com/actions/runner-images/issues/9977
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/386
          - linux/arm/v6
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - uses: docker/setup-buildx-action@v3
      id: setup

    - name: Cache
      uses: actions/cache@v4
      id: cache
      with:
        path: |
          .cache
        key: cache-${{ matrix.platform }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          cache-${{ matrix.platform }}

      # var-cache-apt
    # var-lib-apt
    # root-cache-pip
    # root-distrib-rust
    
    # - name: inject cache into docker
    #   uses: reproducible-containers/buildkit-cache-dance@v3.1.2
    #   with:
    #     cache-map: |
    #       {
    #         "var-cache-apt": "/var/cache/apt",
    #         "var-lib-apt": "/var/lib/apt",
    #         "root-cache-pip": "/root/.cache/pip",
    #         "root-distrib-rust": "/root/.distrib/rust/"
    #       }

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: false
        platforms: ${{ matrix.platform }}
        cache-from: type=local,src=.cache
        cache-to: type=local,dest=.cache-new,mode=max
        file: Dockerfile.build
        outputs: type=local,dest=dist

    # from https://github.com/ArchiveBox/ArchiveBox/blob/dev/.github/workflows/docker.yml
    # This ugly bit is necessary if you don't want your cache to grow forever
    # until it hits GitHub's limit of 5GB.
    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf .cache
        mv .cache-new .cache

    - name: Reorg contents
      continue-on-error: true
      run: |
        ls -la dist
        ls -la dist/linux_amd64
        ls -la dist/linux_arm64
        ls -la dist/linux_arm_v7
        ls -la dist/linux_arm_v6
        ls -la dist/linux_386
        # mv dist/linux_amd64/* dist
        # mv dist/linux_arm64/* dist
        # mv dist/linux_arm_v7/* dist
        # mv dist/linux_386/* dist

  build_docker_musl:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    # 24.02 gives futex error during apt: https://github.com/actions/runner-images/issues/9977
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          # these do not have rust available and will not compile
          # - linux/arm/v7
          # - linux/386
          # - linux/arm/v6
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - uses: docker/setup-buildx-action@v3
      id: setup
    
    - name: Cache
      uses: actions/cache@v4
      id: cache
      with:
        path: |
          .cache
        key: cache-musl-${{ matrix.platform }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          cache-musl-${{ matrix.platform }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: false
        platforms: ${{ matrix.platform }}
        cache-from: type=local,src=.cache
        cache-to: type=local,dest=.cache-new,mode=max
        file: Dockerfile.build_musl
        outputs: type=local,dest=dist
              
    # from https://github.com/ArchiveBox/ArchiveBox/blob/dev/.github/workflows/docker.yml
    # This ugly bit is necessary if you don't want your cache to grow forever
    # until it hits GitHub's limit of 5GB.
    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf .cache
        mv .cache-new .cache

    - name: Reorg contents
      continue-on-error: true
      run: |
        ls -la dist
        ls -la dist/linux_amd64
        ls -la dist/linux_arm64
        ls -la dist/linux_arm_v7
        ls -la dist/linux_arm_v6
        ls -la dist/linux_386
        # mv dist/linux_amd64/* dist
        # mv dist/linux_arm64/* dist
        # mv dist/linux_arm_v7/* dist
        # mv dist/linux_386/* dist

        